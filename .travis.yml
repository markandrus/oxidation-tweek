language: rust
sudo: false

env:
  - BUILD=release

matrix:
  include:
    # WebAssembly
    - rust: nightly
      before_install: rustup target add wasm32-unknown-unknown
      script: PATH=binaryen-1.37.36:$PATH make test-js

    # Linux
    - rust: nightly
      env: TARGET=x86-unknown-linux-musl
      install: true
      before_install: rustup target add $TARGET
      script: make test-c

    # macOS
    - os: osx
      rust: nightly
      env: MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
      install: true
      script: make test-c

before_script:
- |
  cargo +nightly install clippy

  cargo install cbindgen
  cargo install wasm-bindgen
  cargo install wasm-gc

  if [ -z "$TARGET" ]; then
    curl https://github.com/WebAssembly/binaryen/releases/download/1.37.36/binaryen-1.37.36-x86-linux.tar.gz
    tar -x binaryen-*.tar.gz
  fi

install:
- |
  if [ -z "$TARGET" ]; then
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
    source ~/.nvm/nvm.sh
    nvm install 9
  fi

before_deploy:
- |
  name="oxidation-tweek-$TRAVIS_TAG-$TARGET"
  mkdir $name

  if [ -z "$TARGET" ]; then
    cp -R build/release/js/* $name/
  else
    cp target/$TARGET/release/liboxidation_tweek.dylib $name/
    cp README.md c/src/oxidation-tweek.h $name/
  fi

  tar czvf $name.tar.gz $name

deploy:
  api_key:
    secure: TODO
  file_glob: true
  file:
    - $name.tar.gz
  on:
    tags: true
  provider: releases
  skip_cleanup: true
